{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/canvas-reveal-effect.tsx"],"sourcesContent":["\"use client\";\nimport { cn } from \"@/lib/utils\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport React, { useMemo, useRef } from \"react\";\nimport * as THREE from \"three\";\n\nexport const CanvasRevealEffect = ({\n  animationSpeed = 0.4,\n  opacities = [0.3, 0.3, 0.3, 0.5, 0.5, 0.5, 0.8, 0.8, 0.8, 1],\n  colors = [[0, 255, 255]],\n  containerClassName,\n  dotSize,\n  showGradient = true,\n}: {\n  /**\n   * 0.1 - slower\n   * 1.0 - faster\n   */\n  animationSpeed?: number;\n  opacities?: number[];\n  colors?: number[][];\n  containerClassName?: string;\n  dotSize?: number;\n  showGradient?: boolean;\n}) => {\n  return (\n    <div className={cn(\"h-full relative bg-white w-full\", containerClassName)}> {/* Setting background to white */}\n      <div className=\"h-full w-full\">\n        <DotMatrix\n          colors={colors ?? [[0, 255, 255]]}\n          dotSize={dotSize ?? 3}\n          opacities={\n            opacities ?? [0.3, 0.3, 0.3, 0.5, 0.5, 0.5, 0.8, 0.8, 0.8, 1]\n          }\n          shader={`\n              float animation_speed_factor = ${animationSpeed.toFixed(1)};\n              float intro_offset = distance(u_resolution / 2.0 / u_total_size, st2) * 0.01 + (random(st2) * 0.15);\n              opacity *= step(intro_offset, u_time * animation_speed_factor);\n              opacity *= clamp((1.0 - step(intro_offset + 0.1, u_time * animation_speed_factor)) * 1.25, 1.0, 1.25);\n            `}\n          center={[\"x\", \"y\"]}\n        />\n      </div>\n      {showGradient && (\n        <div className=\"absolute inset-0 bg-gradient-to-t from-gray-950 to-[84%]\" />\n      )}\n    </div>\n  );\n};\n\ninterface DotMatrixProps {\n  colors?: number[][];\n  opacities?: number[];\n  totalSize?: number;\n  dotSize?: number;\n  shader?: string;\n  center?: (\"x\" | \"y\")[];\n}\n\nconst DotMatrix: React.FC<DotMatrixProps> = ({\n  colors = [[0, 0, 0]],\n  opacities = [0.04, 0.04, 0.04, 0.04, 0.04, 0.08, 0.08, 0.08, 0.08, 0.14],\n  totalSize = 4,\n  dotSize = 2,\n  shader = \"\",\n  center = [\"x\", \"y\"],\n}) => {\n  const uniforms = React.useMemo(() => {\n    let colorsArray = [\n      colors[0],\n      colors[0],\n      colors[0],\n      colors[0],\n      colors[0],\n      colors[0],\n    ];\n    if (colors.length === 2) {\n      colorsArray = [\n        colors[0],\n        colors[0],\n        colors[0],\n        colors[1],\n        colors[1],\n        colors[1],\n      ];\n    } else if (colors.length === 3) {\n      colorsArray = [\n        colors[0],\n        colors[0],\n        colors[1],\n        colors[1],\n        colors[2],\n        colors[2],\n      ];\n    }\n\n    return {\n      u_colors: {\n        value: colorsArray.map((color) => [\n          color[0] / 255,\n          color[1] / 255,\n          color[2] / 255,\n        ]),\n        type: \"uniform3fv\",\n      },\n      u_opacities: {\n        value: opacities,\n        type: \"uniform1fv\",\n      },\n      u_total_size: {\n        value: totalSize,\n        type: \"uniform1f\",\n      },\n      u_dot_size: {\n        value: dotSize,\n        type: \"uniform1f\",\n      },\n    };\n  }, [colors, opacities, totalSize, dotSize]);\n\n  return (\n    <Shader\n      source={`\n        precision mediump float;\n        in vec2 fragCoord;\n\n        uniform float u_time;\n        uniform float u_opacities[10];\n        uniform vec3 u_colors[6];\n        uniform float u_total_size;\n        uniform float u_dot_size;\n        uniform vec2 u_resolution;\n        out vec4 fragColor;\n        float PHI = 1.61803398874989484820459;\n        float random(vec2 xy) {\n            return fract(tan(distance(xy * PHI, xy) * 0.5) * xy.x);\n        }\n        float map(float value, float min1, float max1, float min2, float max2) {\n            return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n        }\n        void main() {\n            vec2 st = fragCoord.xy;\n            ${\n              center.includes(\"x\")\n                ? \"st.x -= abs(floor((mod(u_resolution.x, u_total_size) - u_dot_size) * 0.5));\"\n                : \"\"\n            }\n            ${\n              center.includes(\"y\")\n                ? \"st.y -= abs(floor((mod(u_resolution.y, u_total_size) - u_dot_size) * 0.5));\"\n                : \"\"\n            }\n      float opacity = step(0.0, st.x);\n      opacity *= step(0.0, st.y);\n\n      vec2 st2 = vec2(int(st.x / u_total_size), int(st.y / u_total_size));\n\n      float frequency = 5.0;\n      float show_offset = random(st2);\n      float rand = random(st2 * floor((u_time / frequency) + show_offset + frequency) + 1.0);\n      opacity *= u_opacities[int(rand * 10.0)];\n      opacity *= 1.0 - step(u_dot_size / u_total_size, fract(st.x / u_total_size));\n      opacity *= 1.0 - step(u_dot_size / u_total_size, fract(st.y / u_total_size));\n\n      vec3 color = u_colors[int(show_offset * 6.0)];\n\n      ${shader}\n\n      fragColor = vec4(color, opacity);\n      fragColor.rgb *= fragColor.a;\n        }`}\n      uniforms={uniforms}\n      maxFps={60}\n    />\n  );\n};\n\ntype Uniforms = {\n  [key: string]: {\n    value: number[] | number[][] | number;\n    type: string;\n  };\n};\nconst ShaderMaterial = ({\n  source,\n  uniforms,\n  maxFps = 60,\n}: {\n  source: string;\n  hovered?: boolean;\n  maxFps?: number;\n  uniforms: Uniforms;\n}) => {\n  const { size } = useThree();\n  const ref = useRef<THREE.Mesh>();\n  let lastFrameTime = 0;\n\n  useFrame(({ clock }) => {\n    if (!ref.current) return;\n    const timestamp = clock.getElapsedTime();\n    if (timestamp - lastFrameTime < 1 / maxFps) {\n      return;\n    }\n    lastFrameTime = timestamp;\n\n    const material: any = ref.current.material;\n    const timeLocation = material.uniforms.u_time;\n    timeLocation.value = timestamp;\n  });\n\n  const getUniforms = () => {\n    const preparedUniforms: any = {};\n\n    for (const uniformName in uniforms) {\n      const uniform: any = uniforms[uniformName];\n\n      switch (uniform.type) {\n        case \"uniform1f\":\n          preparedUniforms[uniformName] = { value: uniform.value, type: \"1f\" };\n          break;\n        case \"uniform3f\":\n          preparedUniforms[uniformName] = {\n            value: new THREE.Vector3().fromArray(uniform.value),\n            type: \"3f\",\n          };\n          break;\n        case \"uniform1fv\":\n          preparedUniforms[uniformName] = { value: uniform.value, type: \"1fv\" };\n          break;\n        case \"uniform3fv\":\n          preparedUniforms[uniformName] = {\n            value: uniform.value.map((v: number[]) =>\n              new THREE.Vector3().fromArray(v)\n            ),\n            type: \"3fv\",\n          };\n          break;\n        case \"uniform2f\":\n          preparedUniforms[uniformName] = {\n            value: new THREE.Vector2().fromArray(uniform.value),\n            type: \"2f\",\n          };\n          break;\n        default:\n          console.error(`Invalid uniform type for '${uniformName}'.`);\n          break;\n      }\n    }\n\n    preparedUniforms[\"u_time\"] = { value: 0, type: \"1f\" };\n    preparedUniforms[\"u_resolution\"] = {\n      value: new THREE.Vector2(size.width * 2, size.height * 2),\n    }; // Initialize u_resolution\n    return preparedUniforms;\n  };\n\n  // Shader material\n  const material = useMemo(() => {\n    const materialObject = new THREE.ShaderMaterial({\n      vertexShader: `\n      precision mediump float;\n      in vec2 coordinates;\n      uniform vec2 u_resolution;\n      out vec2 fragCoord;\n      void main(){\n        float x = position.x;\n        float y = position.y;\n        gl_Position = vec4(x, y, 0.0, 1.0);\n        fragCoord = (position.xy + vec2(1.0)) * 0.5 * u_resolution;\n        fragCoord.y = u_resolution.y - fragCoord.y;\n      }\n      `,\n      fragmentShader: source,\n      uniforms: getUniforms(),\n      glslVersion: THREE.GLSL3,\n      blending: THREE.CustomBlending,\n      blendSrc: THREE.SrcAlphaFactor,\n      blendDst: THREE.OneFactor,\n    });\n\n    return materialObject;\n  }, [size.width, size.height, source]);\n\n  return (\n    <mesh ref={ref as any}>\n      <planeGeometry args={[2, 2]} />\n      <primitive object={material} attach=\"material\" />\n    </mesh>\n  );\n};\n\nconst Shader: React.FC<ShaderProps> = ({ source, uniforms, maxFps = 60 }) => {\n  return (\n    <Canvas className=\"absolute inset-0  h-full w-full\">\n      <ShaderMaterial source={source} uniforms={uniforms} maxFps={maxFps} />\n    </Canvas>\n  );\n};\ninterface ShaderProps {\n  source: string;\n  uniforms: {\n    [key: string]: {\n      value: number[] | number[][] | number;\n      type: string;\n    };\n  };\n  maxFps?: number;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/text-reveal-card.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useRef, useState, memo } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { twMerge } from \"tailwind-merge\";\nimport { cn } from \"@/lib/utils\";\n\nexport const TextRevealCard = ({\n  text,\n  revealText,\n  children,\n  className,\n}: {\n  text: string;\n  revealText: string;\n  children?: React.ReactNode;\n  className?: string;\n}) => {\n  const [widthPercentage, setWidthPercentage] = useState(0);\n  const cardRef = useRef<HTMLDivElement | any>(null);\n  const [left, setLeft] = useState(0);\n  const [localWidth, setLocalWidth] = useState(0);\n  const [isMouseOver, setIsMouseOver] = useState(false);\n\n  useEffect(() => {\n    if (cardRef.current) {\n      const { left, width: localWidth } =\n        cardRef.current.getBoundingClientRect();\n      setLeft(left);\n      setLocalWidth(localWidth);\n    }\n  }, []);\n\n  function mouseMoveHandler(event: any) {\n    event.preventDefault();\n\n    const { clientX } = event;\n    if (cardRef.current) {\n      const relativeX = clientX - left;\n      setWidthPercentage((relativeX / localWidth) * 100);\n    }\n  }\n\n  function mouseLeaveHandler() {\n    setIsMouseOver(false);\n    setWidthPercentage(0);\n  }\n  function mouseEnterHandler() {\n    setIsMouseOver(true);\n  }\n  function touchMoveHandler(event: React.TouchEvent<HTMLDivElement>) {\n    event.preventDefault();\n    const clientX = event.touches[0]!.clientX;\n    if (cardRef.current) {\n      const relativeX = clientX - left;\n      setWidthPercentage((relativeX / localWidth) * 100);\n    }\n  }\n\n  const rotateDeg = (widthPercentage - 50) * 0.1;\n  return (\n    <div\n      onMouseEnter={mouseEnterHandler}\n      onMouseLeave={mouseLeaveHandler}\n      onMouseMove={mouseMoveHandler}\n      onTouchStart={mouseEnterHandler}\n      onTouchEnd={mouseLeaveHandler}\n      onTouchMove={touchMoveHandler}\n      ref={cardRef}\n      className={cn(\n        \"  w-[40rem] rounded-lg  relative overflow-hidden\",\n        className\n      )}\n    >\n      {children}\n\n      <div className=\"  relative flex items-center overflow-hidden\">\n        <motion.div\n          style={{\n            width: \"100%\",\n          }}\n          animate={\n            isMouseOver\n              ? {\n                  opacity: widthPercentage > 0 ? 1 : 0,\n                  clipPath: `inset(0 ${100 - widthPercentage}% 0 0)`,\n                }\n              : {\n                  clipPath: `inset(0 ${100 - widthPercentage}% 0 0)`,\n                }\n          }\n          transition={isMouseOver ? { duration: 0 } : { duration: 0.4 }}\n          className=\"absolute bg-[#1d1c20] z-20  will-change-transform\"\n        >\n          <p\n            style={{\n              textShadow: \"4px 4px 15px rgba(0,0,0,0.5)\",\n            }}\n            className=\"text-base sm:text-[3rem] py-10 font-bold text-white bg-clip-text text-transparent bg-gradient-to-b from-white to-neutral-300\"\n          >\n            {revealText}\n          </p>\n        </motion.div>\n        <motion.div\n          animate={{\n            left: `${widthPercentage}%`,\n            rotate: `${rotateDeg}deg`,\n            opacity: widthPercentage > 0 ? 1 : 0,\n          }}\n          transition={isMouseOver ? { duration: 0 } : { duration: 0.4 }}\n          className=\"h-40 w-[8px] bg-gradient-to-b from-transparent via-neutral-800 to-transparent absolute z-50 will-change-transform\"\n        ></motion.div>\n\n        <div className=\" overflow-hidden [mask-image:linear-gradient(to_bottom,transparent,white,transparent)]\">\n          <p className=\"text-base sm:text-[3rem] py-10 font-bold bg-clip-text text-transparent bg-[#323238]\">\n            {text}\n          </p>\n          <MemoizedStars />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const TextRevealCardTitle = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n  return (\n    <h2 className={twMerge(\"text-white text-lg mb-2\", className)}>\n      {children}\n    </h2>\n  );\n};\n\nexport const TextRevealCardDescription = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n  return (\n    <p className={twMerge(\"text-[#a9a9a9] text-sm\", className)}>{children}</p>\n  );\n};\n\nconst Stars = () => {\n  const randomMove = () => Math.random() * 4 - 2;\n  const randomOpacity = () => Math.random();\n  const random = () => Math.random();\n  return (\n    <div className=\"absolute inset-0\">\n      {[...Array(80)].map((_, i) => (\n        <motion.span\n          key={`star-${i}`}\n          animate={{\n            top: `calc(${random() * 100}% + ${randomMove()}px)`,\n            left: `calc(${random() * 100}% + ${randomMove()}px)`,\n            opacity: randomOpacity(),\n            scale: [1, 1.2, 0],\n          }}\n          transition={{\n            duration: random() * 10 + 20,\n            repeat: Infinity,\n            ease: \"linear\",\n          }}\n          style={{\n            position: \"absolute\",\n            top: `${random() * 100}%`,\n            left: `${random() * 100}%`,\n            width: `2px`,\n            height: `2px`,\n            backgroundColor: \"white\",\n            borderRadius: \"50%\",\n            zIndex: 1,\n          }}\n          className=\"inline-block\"\n        ></motion.span>\n      ))}\n    </div>\n  );\n};\n\nexport const MemoizedStars = memo(Stars);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/contacts.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { CanvasRevealEffect } from \"@/components/ui/canvas-reveal-effect\";\r\nimport {\r\n  IconBrandInstagram,\r\n  IconMail,\r\n  IconPhoneCall,\r\n} from \"@tabler/icons-react\";\r\nimport {\r\n  TextRevealCard,\r\n  TextRevealCardTitle,\r\n  TextRevealCardDescription,\r\n} from \"./ui/text-reveal-card\";\r\n\r\nexport function ContactCards() {\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center justify-center   rounded-2xl w-full\">\r\n        <TextRevealCard\r\n          text=\"  My Contact Information\"\r\n          revealText=\"Thank You Very Much \"\r\n        ></TextRevealCard>\r\n      </div>\r\n\r\n      <div className=\"py-20 flex flex-col lg:flex-row items-center justify-center  w-screen gap-4 mx-auto px-8\">\r\n        <Card title=\"+852-54091997\" icon={<IconPhoneCall />}>\r\n          <CanvasRevealEffect\r\n            animationSpeed={5.1}\r\n            containerClassName=\"bg-emerald-900\"\r\n          />\r\n        </Card>\r\n        <Card title=\"leelokhin0406@gmail.com\" icon={<IconMail />}>\r\n          <CanvasRevealEffect\r\n            animationSpeed={3}\r\n            containerClassName=\"bg-black\"\r\n            colors={[\r\n              [236, 72, 153],\r\n              [232, 121, 249],\r\n            ]}\r\n            dotSize={2}\r\n          />\r\n          {/* Radial gradient for the cute fade */}\r\n          <div className=\"absolute inset-0 [mask-image:radial-gradient(400px_at_center,white,transparent)] bg-black/50 dark:bg-black/90\" />\r\n        </Card>\r\n        <Card title=\"c_arson_\" icon={<IconBrandInstagram />}>\r\n          <CanvasRevealEffect\r\n            animationSpeed={3}\r\n            containerClassName=\"bg-sky-600\"\r\n            colors={[[125, 211, 252]]}\r\n          />\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Card = ({\r\n  title,\r\n  icon,\r\n  children,\r\n}: {\r\n  title: string;\r\n  icon: React.ReactNode;\r\n  children?: React.ReactNode;\r\n}) => {\r\n  const [hovered, setHovered] = React.useState(false);\r\n  return (\r\n    <div\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n      className=\"border border-black/[0.2] group/canvas-card flex items-center justify-center dark:border-white/[0.2]  max-w-sm w-full mx-auto p-4 relative h-[30rem] relative\"\r\n    >\r\n      <Icon className=\"absolute h-6 w-6 -top-3 -left-3 dark:text-white text-black\" />\r\n      <Icon className=\"absolute h-6 w-6 -bottom-3 -left-3 dark:text-white text-black\" />\r\n      <Icon className=\"absolute h-6 w-6 -top-3 -right-3 dark:text-white text-black\" />\r\n      <Icon className=\"absolute h-6 w-6 -bottom-3 -right-3 dark:text-white text-black\" />\r\n\r\n      <AnimatePresence>\r\n        {hovered && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            className=\"h-full w-full absolute inset-0\"\r\n          >\r\n            {children}\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      <div className=\"relative z-20\">\r\n        <div className=\"text-center group-hover/canvas-card:-translate-y-4 group-hover/canvas-card:opacity-0 transition duration-200 w-full  mx-auto flex items-center justify-center\">\r\n          {icon}\r\n        </div>\r\n        <h2 className=\"dark:text-white text-xl opacity-0 group-hover/canvas-card:opacity-100 relative z-10 text-black mt-4  font-bold group-hover/canvas-card:text-white group-hover/canvas-card:-translate-y-2 transition duration-200\">\r\n          {title}\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AceternityIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"66\"\r\n      height=\"65\"\r\n      viewBox=\"0 0 66 65\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"h-10 w-10 text-black dark:text-white group-hover/canvas-card:text-white \"\r\n    >\r\n      <path\r\n        d=\"M8 8.05571C8 8.05571 54.9009 18.1782 57.8687 30.062C60.8365 41.9458 9.05432 57.4696 9.05432 57.4696\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"15\"\r\n        strokeMiterlimit=\"3.86874\"\r\n        strokeLinecap=\"round\"\r\n        style={{ mixBlendMode: \"darken\" }}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const Icon = ({ className, ...rest }: any) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n      strokeWidth=\"1.5\"\r\n      stroke=\"currentColor\"\r\n      className={className}\r\n      {...rest}\r\n    >\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6v12m6-6H6\" />\r\n    </svg>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;AAgBO,SAAS;IACd,qBACE;;0BACE,4TAAC;gBAAI,WAAU;0BACb,cAAA,4TAAC,8IAAA,CAAA,iBAAc;oBACb,MAAK;oBACL,YAAW;;;;;;;;;;;0BAIf,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;wBAAK,OAAM;wBAAgB,oBAAM,4TAAC,iUAAA,CAAA,gBAAa;;;;;kCAC9C,cAAA,4TAAC,kJAAA,CAAA,qBAAkB;4BACjB,gBAAgB;4BAChB,oBAAmB;;;;;;;;;;;kCAGvB,4TAAC;wBAAK,OAAM;wBAA0B,oBAAM,4TAAC,uTAAA,CAAA,WAAQ;;;;;;0CACnD,4TAAC,kJAAA,CAAA,qBAAkB;gCACjB,gBAAgB;gCAChB,oBAAmB;gCACnB,QAAQ;oCACN;wCAAC;wCAAK;wCAAI;qCAAI;oCACd;wCAAC;wCAAK;wCAAK;qCAAI;iCAChB;gCACD,SAAS;;;;;;0CAGX,4TAAC;gCAAI,WAAU;;;;;;;;;;;;kCAEjB,4TAAC;wBAAK,OAAM;wBAAW,oBAAM,4TAAC,2UAAA,CAAA,qBAAkB;;;;;kCAC9C,cAAA,4TAAC,kJAAA,CAAA,qBAAkB;4BACjB,gBAAgB;4BAChB,oBAAmB;4BACnB,QAAQ;gCAAC;oCAAC;oCAAK;oCAAK;iCAAI;6BAAC;;;;;;;;;;;;;;;;;;;AAMrC;KAxCgB;AA0ChB,MAAM,OAAO,CAAC,EACZ,KAAK,EACL,IAAI,EACJ,QAAQ,EAKT;;IACC,MAAM,CAAC,SAAS,WAAW,GAAG,4RAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAC7C,qBACE,4TAAC;QACC,cAAc,IAAM,WAAW;QAC/B,cAAc,IAAM,WAAW;QAC/B,WAAU;;0BAEV,4TAAC;gBAAK,WAAU;;;;;;0BAChB,4TAAC;gBAAK,WAAU;;;;;;0BAChB,4TAAC;gBAAK,WAAU;;;;;;0BAChB,4TAAC;gBAAK,WAAU;;;;;;0BAEhB,4TAAC,uUAAA,CAAA,kBAAe;0BACb,yBACC,4TAAC,wTAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;oBAAE;oBACtB,SAAS;wBAAE,SAAS;oBAAE;oBACtB,WAAU;8BAET;;;;;;;;;;;0BAKP,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;wBAAI,WAAU;kCACZ;;;;;;kCAEH,4TAAC;wBAAG,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAKX;GA3CM;MAAA;AA6CN,MAAM,iBAAiB;IACrB,qBACE,4TAAC;QACC,OAAM;QACN,QAAO;QACP,SAAQ;QACR,MAAK;QACL,OAAM;QACN,WAAU;kBAEV,cAAA,4TAAC;YACC,GAAE;YACF,QAAO;YACP,aAAY;YACZ,kBAAiB;YACjB,eAAc;YACd,OAAO;gBAAE,cAAc;YAAS;;;;;;;;;;;AAIxC;MApBM;AAsBC,MAAM,OAAO,CAAC,EAAE,SAAS,EAAE,GAAG,MAAW;IAC9C,qBACE,4TAAC;QACC,OAAM;QACN,MAAK;QACL,SAAQ;QACR,aAAY;QACZ,QAAO;QACP,WAAW;QACV,GAAG,IAAI;kBAER,cAAA,4TAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,GAAE;;;;;;;;;;;AAG3D;MAda"}},
    {"offset": {"line": 921, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 926, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/contact/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ContactCards } from \"@/components/contacts\";\r\nimport { title } from \"@/components/primitives\";\r\nimport { ProgrammingSkills } from \"@/components/skills\";\r\n\r\nexport default function SkillsPage() {\r\n  return (\r\n    <div>\r\n      <ContactCards/>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;;;AAMe,SAAS;IACtB,qBACE,4TAAC;kBACC,cAAA,4TAAC,0HAAA,CAAA,eAAY;;;;;;;;;;AAGnB;KANwB"}},
    {"offset": {"line": 951, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}